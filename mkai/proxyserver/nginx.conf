user nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" "$request_uri" "$uri"'
                      '"$http_user_agent" "$http_x_forwarded_for"';    
    access_log  /var/log/nginx/access.log  main;
    sendfile on;
    keepalive_timeout 65;


    upstream webpage {
        server nginx:80;
    }

    upstream api {
        server fastapi:80;
    }

    # upstream janus {
    #     server janus:8088;
    # }

    # upstream janus-ws {
    #     server janus:8188;
    # }

    # upstream janus_admin {
    #     server janus:7088;
    # }

    server {
        location /api/ {
            # rewrite ^/api(.*)$ $1 break;
            proxy_pass         http://api;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass         http://webpage;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto $scheme;

            # proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection "upgrade";

            # 캐시 비활성화
            proxy_cache off;
            proxy_cache_bypass $http_cache_control;
            proxy_no_cache $http_pragma $http_authorization;
        }

	# listen 80;
	# listen [::]:80;
	# server_name rtctest.p-e.kr;

        # location ~ /.well-known/acme-challenge {
        #         allow all;
        #         root /usr/share/nginx/html;
        # }

        # location / {
        # 	return 301 https://$host$request_uri;
	# }
    }
    
    # server {
	# listen 443 ssl;
	# server_name rtctest.p-e.kr;

    #     ssl_certificate /etc/letsencrypt/live/rtctest.p-e.kr/fullchain.pem;
    #     ssl_certificate_key /etc/letsencrypt/live/rtctest.p-e.kr/privkey.pem;
    #     include /etc/letsencrypt/options-ssl-nginx.conf;
	# ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;


    #     location /janus-ws/ {
    #         proxy_pass http://janus-ws;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }

    #     # location /janus/ {
    #     #     proxy_pass http://janus;
    #     # }

    #     # location /admin/ {
    #     #     proxy_pass http://janus_admin;
    #     # }

    #     location /api/ {
    #         # rewrite ^/api(.*)$ $1 break;
    #         proxy_pass         http://api;
    #         proxy_redirect     off;
    #         proxy_set_header   Host $host;
    #         proxy_set_header   X-Real-IP $remote_addr;
    #         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header   X-Forwarded-Host $server_name;
    #         proxy_set_header   X-Forwarded-Proto $scheme;
    #     }

    #     location /static/ {
    #         # alias /api/static/;
    #         proxy_pass http://api;
    #     }

    #     location /socket.io/ {
    #         # alias /api/socket.io/;
    #         proxy_pass http://api; # Flask 애플리케이션으로의 실제 URL
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #         proxy_redirect off;
    #     }

    #     location / {
    #         proxy_pass         http://webpage;
    #         proxy_redirect     off;
    #         proxy_set_header   Host $host;
    #         proxy_set_header   X-Real-IP $remote_addr;
    #         proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header   X-Forwarded-Host $server_name;
    #         proxy_set_header   X-Forwarded-Proto $scheme;

    #         # proxy_http_version 1.1;
    #         # proxy_set_header Upgrade $http_upgrade;
    #         # proxy_set_header Connection "upgrade";

    #         # 캐시 비활성화
    #         proxy_cache off;
    #         proxy_cache_bypass $http_cache_control;
    #         proxy_no_cache $http_pragma $http_authorization;
    #     }
        
    #     # location /webmeeting/ {
    #     #     root /usr/share/nginx/html;
    #     #     index index.html index.htm;
    #     # }

    #     location /janus {
    #         proxy_pass http://janus;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection "upgrade";
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     }
    # }
}